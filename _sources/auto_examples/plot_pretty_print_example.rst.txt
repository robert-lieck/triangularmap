
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_pretty_print_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_pretty_print_example.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_pretty_print_example.py:


Pretty Print Example
===========================

This example shows typical usages of the :func:`~tmap.TMap.pretty` function.

.. GENERATED FROM PYTHON SOURCE LINES 11-14

Typical Use Cases
-----------------
We create a TMap of width 6

.. GENERATED FROM PYTHON SOURCE LINES 14-21

.. code-block:: Python


    from triangularmap import TMap

    n = 6
    arr = list(range(TMap.size_from_n(n)))
    tmap = TMap(arr)








.. GENERATED FROM PYTHON SOURCE LINES 22-23

and print it:

.. GENERATED FROM PYTHON SOURCE LINES 23-26

.. code-block:: Python


    print(tmap.pretty())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

               ╱╲           
              ╱ 0╲          
             ╱╲  ╱╲         
            ╱ 1╲╱ 2╲        
           ╱╲  ╱╲  ╱╲       
          ╱ 3╲╱ 4╲╱ 5╲      
         ╱╲  ╱╲  ╱╲  ╱╲     
        ╱ 6╲╱ 7╲╱ 8╲╱ 9╲    
       ╱╲  ╱╲  ╱╲  ╱╲  ╱╲   
      ╱10╲╱11╲╱12╲╱13╲╱14╲  
     ╱╲  ╱╲  ╱╲  ╱╲  ╱╲  ╱╲ 
    ╱15╲╱16╲╱17╲╱18╲╱19╲╱20╲




.. GENERATED FROM PYTHON SOURCE LINES 27-28

We can add a horizontal axis and a depth axis with labels:

.. GENERATED FROM PYTHON SOURCE LINES 28-31

.. code-block:: Python


    print(tmap.pretty(haxis=True, daxis=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

               ╱╲            depth
              ╱ 0╲           0
             ╱╲  ╱╲         
            ╱ 1╲╱ 2╲         1
           ╱╲  ╱╲  ╱╲       
          ╱ 3╲╱ 4╲╱ 5╲       2
         ╱╲  ╱╲  ╱╲  ╱╲     
        ╱ 6╲╱ 7╲╱ 8╲╱ 9╲     3
       ╱╲  ╱╲  ╱╲  ╱╲  ╱╲   
      ╱10╲╱11╲╱12╲╱13╲╱14╲   4
     ╱╲  ╱╲  ╱╲  ╱╲  ╱╲  ╱╲ 
    ╱15╲╱16╲╱17╲╱18╲╱19╲╱20╲ 5
    │   │   │   │   │   │   │
    0   1   2   3   4   5   6   




.. GENERATED FROM PYTHON SOURCE LINES 32-33

or a level axis instead of the depth axis:

.. GENERATED FROM PYTHON SOURCE LINES 33-36

.. code-block:: Python


    print(tmap.pretty(haxis=True, laxis=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

               ╱╲            level
              ╱ 0╲           6
             ╱╲  ╱╲         
            ╱ 1╲╱ 2╲         5
           ╱╲  ╱╲  ╱╲       
          ╱ 3╲╱ 4╲╱ 5╲       4
         ╱╲  ╱╲  ╱╲  ╱╲     
        ╱ 6╲╱ 7╲╱ 8╲╱ 9╲     3
       ╱╲  ╱╲  ╱╲  ╱╲  ╱╲   
      ╱10╲╱11╲╱12╲╱13╲╱14╲   2
     ╱╲  ╱╲  ╱╲  ╱╲  ╱╲  ╱╲ 
    ╱15╲╱16╲╱17╲╱18╲╱19╲╱20╲ 1
    │   │   │   │   │   │   │
    0   1   2   3   4   5   6   




.. GENERATED FROM PYTHON SOURCE LINES 37-38

We can cut of the top and specify custom characters for filling the whitespace:

.. GENERATED FROM PYTHON SOURCE LINES 38-41

.. code-block:: Python


    print(tmap.pretty(crosses=True, cut=4, fill_char="-", top_char='^', bottom_char='v', pad_char='0'))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    -------╱^╲v╱^╲v╱^╲-------
    ------╳003╳004╳005╳------
    -----╱^╲v╱^╲v╱^╲v╱^╲-----
    ----╳006╳007╳008╳009╳----
    ---╱^╲v╱^╲v╱^╲v╱^╲v╱^╲---
    --╳010╳011╳012╳013╳014╳--
    -╱^╲v╱^╲v╱^╲v╱^╲v╱^╲v╱^╲-
    ╳015╳016╳017╳018╳019╳020╳




.. GENERATED FROM PYTHON SOURCE LINES 42-45

Two Different Styles
--------------------
The default style uses '╱' and '╲' characters to draw the map. We can also use a style that additionally uses '╳':

.. GENERATED FROM PYTHON SOURCE LINES 45-48

.. code-block:: Python


    print(tmap.pretty(crosses=True, haxis=True, daxis=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

                ╳             depth
               ╱ ╲           
              ╳  0╳           0
             ╱ ╲ ╱ ╲         
            ╳  1╳  2╳         1
           ╱ ╲ ╱ ╲ ╱ ╲       
          ╳  3╳  4╳  5╳       2
         ╱ ╲ ╱ ╲ ╱ ╲ ╱ ╲     
        ╳  6╳  7╳  8╳  9╳     3
       ╱ ╲ ╱ ╲ ╱ ╲ ╱ ╲ ╱ ╲   
      ╳ 10╳ 11╳ 12╳ 13╳ 14╳   4
     ╱ ╲ ╱ ╲ ╱ ╲ ╱ ╲ ╱ ╲ ╱ ╲ 
    ╳ 15╳ 16╳ 17╳ 18╳ 19╳ 20╳ 5
    │   │   │   │   │   │   │
    0   1   2   3   4   5   6   




.. GENERATED FROM PYTHON SOURCE LINES 49-53

The 'crosses' style tends to be more compact as only one '╳' is used at the crossings (instead of '╲╱' or '╱╲' as in
the default style). Moreover, content is padded to fill an uneven number of characters (while in the default style it
is padded to an even number). The crosses style is therefore particularly compact if the content itself is
of uneven width (e.g. just a single character wide):

.. GENERATED FROM PYTHON SOURCE LINES 53-56

.. code-block:: Python


    print(TMap('abcdefghij').pretty(crosses=True))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

        ╳    
       ╳a╳   
      ╳b╳c╳  
     ╳d╳e╳f╳ 
    ╳g╳h╳i╳j╳




.. GENERATED FROM PYTHON SOURCE LINES 57-58

versus the default style:

.. GENERATED FROM PYTHON SOURCE LINES 58-61

.. code-block:: Python


    print(TMap('abcdefghij').pretty())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

           ╱╲       
          ╱ a╲      
         ╱╲  ╱╲     
        ╱ b╲╱ c╲    
       ╱╲  ╱╲  ╱╲   
      ╱ d╲╱ e╲╱ f╲  
     ╱╲  ╱╲  ╱╲  ╱╲ 
    ╱ g╲╱ h╲╱ i╲╱ j╲




.. GENERATED FROM PYTHON SOURCE LINES 62-64

On the down-side it has a slightly more "messy" appearance (and therefore is not the default style), because there are
no unicode character for the boundary, i.e., a '╳' with one of the upper arms missing.

.. GENERATED FROM PYTHON SOURCE LINES 66-72

Known Issues
------------
Plotting of the triangular map itself is not adapted to accommodate the axes, which may result in ill-formatted axes
for some edge cases. Below, there are no spaces between two-digit tick labels on the horizontal axis, because the
content is only one character wide (in more extreme cases, they may even become misaligned if there is not enough
space):

.. GENERATED FROM PYTHON SOURCE LINES 72-73

.. code-block:: Python


    print(TMap('.' * TMap.size_from_n(15)).pretty(crosses=True, daxis=True, haxis=True))



.. rst-class:: sphx-glr-script-out

 .. code-block:: none

                   ╳                depth
                  ╳.╳               0
                 ╳.╳.╳              1
                ╳.╳.╳.╳             2
               ╳.╳.╳.╳.╳            3
              ╳.╳.╳.╳.╳.╳           4
             ╳.╳.╳.╳.╳.╳.╳          5
            ╳.╳.╳.╳.╳.╳.╳.╳         6
           ╳.╳.╳.╳.╳.╳.╳.╳.╳        7
          ╳.╳.╳.╳.╳.╳.╳.╳.╳.╳       8
         ╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳      9
        ╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳     10
       ╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳    11
      ╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳   12
     ╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳  13
    ╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳.╳ 14
    │ │ │ │ │ │ │ │ │ │ │ │ │ │ │ │
    0 1 2 3 4 5 6 7 8 9 101112131415





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.006 seconds)


.. _sphx_glr_download_auto_examples_plot_pretty_print_example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_pretty_print_example.ipynb <plot_pretty_print_example.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_pretty_print_example.py <plot_pretty_print_example.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_pretty_print_example.zip <plot_pretty_print_example.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
